DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS categories CASCADE;
DROP TABLE IF EXISTS location CASCADE;
DROP TABLE IF EXISTS events CASCADE;
DROP TABLE IF EXISTS requests CASCADE;
DROP TABLE IF EXISTS compilations CASCADE;
DROP TABLE IF EXISTS compilations_events CASCADE;
DROP TABLE IF EXISTS comments CASCADE;


create table if not exists users
(
    id bigint generated by default as identity not null,
    name varchar(250) not null,
    email varchar(254) not null unique,
    CONSTRAINT pk_users PRIMARY KEY(id)
);

create table if not exists categories
(
    id bigint generated by default as identity not null,
    name varchar(50) not null,
    CONSTRAINT pk_categories PRIMARY KEY(id)
);

create table if not exists location
(
    id bigint generated by default as identity not null,
    lat real not null,
    lon real not null,
    CONSTRAINT pk_location PRIMARY KEY(id)
);

CREATE TABLE IF NOT EXISTS events
(
    id bigint generated by default as identity not null,
    annotation VARCHAR(2000) NOT NULL,
    category_id BIGINT NOT NULL,
    confirmed_requests INT NOT NULL,
    created_on TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    description VARCHAR(10000),
    event_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    initiator_id BIGINT NOT NULL,
    location_id BIGINT NOT NULL,
    paid BOOLEAN NOT NULL,
    participant_limit INT,
    published_on TIMESTAMP WITHOUT TIME ZONE,
    request_moderation BOOLEAN NOT NULL,
    states VARCHAR(50) NOT NULL,
    title VARCHAR(255) NOT NULL,
    views INT NOT NULL,
    CONSTRAINT pk_events PRIMARY KEY(id),
    CONSTRAINT fk_events_categories FOREIGN KEY (category_id) REFERENCES categories (id),
    CONSTRAINT fk_events_location FOREIGN KEY (location_id) REFERENCES location (id),
    CONSTRAINT fk_events_users FOREIGN KEY (initiator_id) REFERENCES users (id)
    );

create table if not exists requests
(
    id bigint generated by default as identity not null,
    created timestamp without time zone not null,
    event_id bigint not null,
    requester_id bigint not null,
    status varchar(50) not null,
    CONSTRAINT pk_requests PRIMARY KEY(id),
    CONSTRAINT fk_requests_events FOREIGN KEY (event_id) REFERENCES events (id),
    CONSTRAINT fk_requests_users FOREIGN KEY (requester_id) REFERENCES users (id)
);

create table if not exists compilations
(
    id bigint generated by default as identity not null,
    title varchar(51) unique not null,
    pinned boolean not null,
    CONSTRAINT pk_compilations PRIMARY KEY(id)
);

create table if not exists compilations_events
(
    compilation_id bigint not null,
    event_id bigint not null,
    CONSTRAINT fk_compilation FOREIGN KEY (compilation_id) REFERENCES compilations(id),
    CONSTRAINT fk_event FOREIGN KEY (event_id) REFERENCES events(id),
    CONSTRAINT pk_compilation_events PRIMARY KEY (compilation_id, event_id)
);

create table if not exists comments
(
    id bigint generated by default as identity not null,
    text varchar(2000) not null,
    published timestamp without time zone not null,
    user_id bigint not null,
    event_id bigint not null,
    CONSTRAINT pk_requests PRIMARY KEY(id),
    CONSTRAINT fk_comments_users FOREIGN KEY (user_id) REFERENCES users (id),
    CONSTRAINT fk_comments_events FOREIGN KEY (event_id) REFERENCES events (id)
);