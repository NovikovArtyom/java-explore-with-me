create table if not exists users
(
    id bigint generated by default as identity not null,
    name varchar(50) not null,
    email varchar(50) not null unique,
    CONSTRAINT pk_users PRIMARY KEY(id)
);

create table if not exists categories
(
    id bigint generated by default as identity not null,
    name varchar(50) not null unique,
    CONSTRAINT pk_categories PRIMARY KEY(id)
);

create table if not exists location
(
    id bigint generated by default as identity not null,
    lat real not null,
    lon real not null,
    CONSTRAINT pk_location PRIMARY KEY(id)
);

create table if not exists events
(
    id bigint generated by default as identity not null,
    annotation varchar(50) not null,
    category_id bigint not null,
    confirmed_requests int not null,
    created_on timestamp without time zone not null,
    description varchar(255),
    event_date timestamp without time zone not null,
    initiator_id bigint not null,
    location_id bigint not null,
    paid boolean not null,
    participant_limit int,
    published_on timestamp without time zone not null,
    request_moderation boolean not null,
    states varchar(50) not null,
    title varchar(50) not null,
    views int not null,
    CONSTRAINT pk_events PRIMARY KEY(id),
    CONSTRAINT fk_events_categories FOREIGN KEY (category_id) REFERENCES categories (id),
    CONSTRAINT fk_events_location FOREIGN KEY (location_id) REFERENCES location (id),
    CONSTRAINT fk_events_users FOREIGN KEY (initiator_id) REFERENCES users (id),
);

create table if not exists requests
(
    id bigint generated by default as identity not null,
    created timestamp without time zone not null,
    event_id bigint not null,
    requester_id bigint not null,
    status varchar(50) not null
    CONSTRAINT pk_requests PRIMARY KEY(id),
    CONSTRAINT fk_requests_events FOREIGN KEY (event_id) REFERENCES events (id),
    CONSTRAINT fk_requests_users FOREIGN KEY (requester_id) REFERENCES users (id),
);

create table if not exists compilations
(
    id bigint generated by default as identity not null,
    title varchar(255) unique not null,
    pinned boolean not null,
    CONSTRAINT pk_location PRIMARY KEY(id),
);

create table if not exists compilations_entity
(
    compilation_id bigint not null,
    event_id bigint not null,
    CONSTRAINT fk_compilation FOREIGN KEY (compilation_id) REFERENCES compilations(id),
    CONSTRAINT fk_event FOREIGN KEY (event_id) REFERENCES events(id),
    CONSTRAINT pk_compilation_events PRIMARY KEY (compilation_id, event_id)
);